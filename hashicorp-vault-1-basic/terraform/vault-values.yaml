global:
  enabled: true
  tlsDisable: true

injector:
  enabled: false

server:
  image:
    repository: hashicorp/vault
    tag: "${vault_image_tag}"

  # HA configuration
  ha:
    enabled: true
    replicas: 3

    # Raft storage configuration
    raft:
      enabled: true
      setNodeId: true

      config: |
        ui = true
        
        listener "tcp" {
          tls_disable = 1
          address = "[::]:8200"
          cluster_address = "[::]:8201"
        }
        
        storage "raft" {
          path = "/vault/data"
          node_id = "NODE_NAME"
        
          retry_join {
            leader_api_addr = "http://vault-0.vault-internal:8200"
          }
          retry_join {
            leader_api_addr = "http://vault-1.vault-internal:8200"
          }  
          retry_join {
            leader_api_addr = "http://vault-2.vault-internal:8200"
          }
        }
        
        cluster_addr = "http://POD_IP:8201"
        api_addr = "http://POD_IP:8200"
        
        disable_mlock = true
        
        service_registration "kubernetes" {}

  # Resources
  resources:
    requests:
      memory: 256Mi
      cpu: 250m
    limits:
      memory: 512Mi
      cpu: 500m

  # Persistent storage
  dataStorage:
    enabled: true
    size: "${storage_size}"
    storageClass: "${storage_class}"
    accessMode: ReadWriteOnce

  # Security context
  securityContext:
    runAsNonRoot: true
    runAsGroup: 1000
    runAsUser: 100
    fsGroup: 1000

  # Liveness and readiness probes
  readinessProbe:
    enabled: true
    path: "/v1/sys/health?standbyok=true&sealedcode=204&uninitcode=204"
    initialDelaySeconds: 10
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 2

  livenessProbe:
    enabled: true
    path: "/v1/sys/health?standbyok=true&sealedcode=204&uninitcode=204"
    initialDelaySeconds: 120
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3

  # Pod anti-affinity for HA
  affinity: |
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: vault
              component: server
          topologyKey: kubernetes.io/hostname

  # Service configuration
  service:
    enabled: true
    type: ClusterIP
    port: 8200
    targetPort: 8200

  # Ingress configuration
  ingress:
    enabled: ${ingress_enabled}
    ingressClassName: nginx
    activeService: false
    hosts:
      - host: "${ingress_hostname}"
        paths: ["/"]
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTP"

ui:
  enabled: true
  serviceType: ClusterIP

# CSI driver (optional, for secret injection)
csi:
  enabled: false
